# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ master,v1 ]
    paths-ignore:
      - 'DevWikiBackend/.env'
  pull_request:
    branches: [ master ]
    paths-ignore:
      - 'DevWikiBackend/.env'
jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432

        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: psycopg2 prerequisitess
      run: sudo apt-get install libpq-dev

    - name: Install dependencies
      run: |
         python -m pip install --upgrade pip
         pip install -r requirements.txt
    - name: Make migrations
      run: |
        python manage.py makemigrations 
        python manage.py makemigrations users
    - name: Run migrations
      run: python manage.py migrate

    - name: Run tests
      run: python manage.py test
    - uses: actions/checkout@v2


    - uses: actions/upload-artifact@v2
      with:
        name: my-artifact
        path: .
      
  
  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - name: Download a single artifact
      uses: actions/download-artifact@v2
      with:
        name: my-artifact
                
    - name: Deploy to Server
      uses: easingthemes/ssh-deploy@v2.1.5
      env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          SOURCE: "."
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          REMOTE_HOST: ${{ secrets.HOST }}
          REMOTE_PORT: ${{ secrets.PORT }}
          TARGET: '/home/artur/backend'

          ARGS: "-rltgoDzvO"
    - name: restart uwsgi server
      uses: fifsky/ssh-action@master
      with:
        command: |
            cd backend
            source env/bin/activate
            pip3 install -r requirements.txt
            python manage.py migrate
        host: ${{ secrets.HOST }}
        port: ${{ secrets.PORT }}
        user: ${{ secrets.REMOTE_USER }}
        key: ${{ secrets.SERVER_SSH_KEY}}     
          
